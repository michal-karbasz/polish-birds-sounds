* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  font-family: 'Amatic SC', cursive;
}

header {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

header h1 {
  z-index: 1;
  font-size: 3rem;
  opacity: 0.1;
  animation: fadein 4s 1 forwards;
}

@keyframes fadein {
  0% {
    opacity: 0.1;
  }
  100% {
    opacity: 1;
  }
}

header .oval {
  position: absolute;
  bottom: -25px;
  left: 0;
  height: 50px;
  width: 100%;
  border-radius: 50%;
  background-color: white;
  z-index: -1;
}

.flex-container {
  display: flex;
  flex-direction: column;
}

.flex-container .flex-row {
  display: flex;
  align-items: center;
  position: relative;
  opacity: 0.9;
}

.flex-container .flex-row:hover {
  opacity: 1;
}

.flex-container .flex-row::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 0;
  height: 20px;
  width: 100%;
  border-radius: 50%;
  background-color: white;
}

.flex-container .tit-family {
  background-image: url("../img/branch1.png");
  background-position: right;
  background-repeat: no-repeat;
  position: relative;
}

.flex-container .tit-family:hover {
  background-image: url("../img/branch1b.png");
}

.flex-container .sroka {
  background-image: url("../img/branch2.png");
  background-position: right;
  background-repeat: no-repeat;
}

.flex-container .col {
  display: flex;
  align-items: center;
  position: relative;
}

.flex-container .col span {
  padding: 10px 80px 10px 10px;
  font-size: 2.5rem;
  position: relative;
}

.flex-container .col span::before {
  content: '';
  border: solid darkgreen;
  border-width: 0 3px 3px 0;
  display: inline-block;
  padding: 5px;
  position: absolute;
  bottom: 30px;
  right: 45px;
  transform: rotate(45deg);
  -webkit-transform: rotate(45deg);
}

.flex-container .col p {
  font-size: 2rem;
  padding: 32px 8px;
  text-align: justify;
}

.flex-container img {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  margin: 20px 10px;
  transition: all 1s;
  z-index: 3;
}

.flex-container img:hover {
  cursor: pointer;
  transform: scale(1.1);
  transition: 0.5s;
}

.flex-container .notes {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 4;
  opacity: .8;
}

.description {
  display: flex;
  align-items: center;
  flex-direction: column;
}

.description span {
  padding: 0 10px;
  font-size: 2rem;
  display: none;
}

.description p {
  font-size: 2rem;
  padding: 32px 8px;
  text-align: justify;
}

.description .flex-row-inner {
  display: flex;
  flex-wrap: wrap;
}

.description .flex-row-inner.tits {
  justify-content: space-around;
}

.description .flex-row-inner .col-inner {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.description .flex-row-inner .col-inner img {
  display: none;
}

.flex-row:nth-child(1) {
  background-color: rgba(224, 240, 224, 0.9);
  justify-content: flex-end;
}

.flex-row:nth-child(2) {
  background-color: rgba(253, 255, 253, 0.732);
}

.flex-row:nth-child(3) {
  background-color: rgba(224, 240, 224, 0.9);
  justify-content: flex-end;
}

.flex-row:nth-child(4) {
  background-color: rgba(253, 255, 253, 0.732);
}

.flex-row:nth-child(5) {
  background-color: rgba(224, 240, 224, 0.9);
  justify-content: flex-end;
}

.flex-row:nth-child(6) {
  background-color: rgba(253, 255, 253, 0.732);
}

.flex-row:nth-child(7) {
  background-color: rgba(224, 240, 224, 0.9);
  justify-content: flex-end;
}

.flex-row:nth-child(8) {
  background-color: rgba(253, 255, 253, 0.732);
}

.flex-row:nth-child(9) {
  background-color: rgba(224, 240, 224, 0.9);
  justify-content: flex-end;
}

.flex-row:nth-child(10) {
  background-color: rgba(253, 255, 253, 0.732);
}

.flex-row:nth-child(11) {
  background-color: rgba(224, 240, 224, 0.9);
  justify-content: flex-end;
}

.flex-row:nth-child(12) {
  background-color: rgba(253, 255, 253, 0.732);
}

footer {
  display: flex;
  align-items: center;
  height: 30px;
}

footer h3 {
  font-weight: 400;
  font-size: 1.5rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
